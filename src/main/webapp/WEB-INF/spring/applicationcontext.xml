<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
    					http://www.springframework.org/schema/mvc/spring-mvc.xsd
  					    http://www.springframework.org/schema/beans 
  					    http://www.springframework.org/schema/beans/spring-beans.xsd
       					http://www.springframework.org/schema/context 
       					http://www.springframework.org/schema/context/spring-context.xsd
       					http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-4.0.xsd
       					http://www.springframework.org/schema/aop         
     					http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Enables Aspect Oriented Programming -->
	<aop:aspectj-autoproxy />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="com.suyoga.subjee.controller" />
	<context:component-scan base-package="com.suyoga.subjee.dao" />
	<context:component-scan base-package="com.suyoga.subjee.dao.impl" />
	<context:component-scan base-package="com.suyoga.subjee.json" />
	<context:component-scan base-package="com.suyoga.subjee.model" />
	<context:component-scan base-package="com.suyoga.subjee.services" />
	<context:component-scan base-package="com.suyoga.subjee.util" />

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />				
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>
	
	 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   	</beans:bean>
 
     
<!--     <interceptors>
		<beans:bean class="com.suyoga.subjee.controller.AuthenticationInterceptor" />
		 <beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0"></beans:property>
			<beans:property name="useExpiresHeader" value="true"></beans:property>
			<beans:property name="useCacheControlHeader" value="true"></beans:property>
			<beans:property name="useCacheControlNoStore" value="true"></beans:property>
		</beans:bean> 
	</interceptors> 
	
  -->
     


   <!--  <beans:bean id="runScheduler" class="com.suyoga.subjee.services.SchedulerMailService" />
   `
   <task:scheduled-tasks>
   
   <task:scheduled ref="runScheduler" method="sentMail" cron="* */3 * * * *"/>  
 
   

   </task:scheduled-tasks>  --> 
   

	
	
</beans:beans>